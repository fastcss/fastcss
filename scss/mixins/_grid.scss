@use '../functions' as *;

@mixin column-classes($screen, $width, $columns, $gutter) {
  @include container($width, $gutter);
  @include column($screen, $columns);

  // @TODO: make these utilities optional
  @include column-utilities($screen, $columns);
  @include row-utilities($screen);
}

@mixin column($screen, $columns) {
  $screenText: if($screen, $screen+'\\:', '');

  .#{$screenText}col {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }
  @for $column from 1 through $columns {
    .#{$screenText}col-#{$column} {
      flex-basis: percentage($column / $columns);
      max-width: percentage($column / $columns);
    }
  }
}

@mixin container($width, $gutter) {
  .container {
    width: $width - $gutter;
  }
}

@mixin column-utilities($screen, $columns) {
  $screenText: if($screen, $screen+'\\:', '');

  @for $column from 1 through $columns {
    .#{$screenText}col-#{$column}-offset {
      margin-left: percentage($column / $columns);
    }
    .#{$screenText}col-#{$column}-push {
      left: percentage($column / $columns);
    }
    .#{$screenText}col-#{$column}-pull {
      right: percentage($column / $columns);
    }
  }
}

@mixin row-utilities($screen) {
  $screenText: if($screen, $screen+'\\:', '');

  .#{$screenText}items-start { justify-content: flex-start; }
  .#{$screenText}items-end { justify-content: flex-end; }
  .#{$screenText}items-center { justify-content: center; }
  .#{$screenText}items-top { align-items: flex-start; }
  .#{$screenText}items-bottom { align-items: flex-end; }
  .#{$screenText}items-middle { align-items: center; }
  .#{$screenText}items-around { justify-content: space-around; }
  .#{$screenText}items-between { justify-content: space-between; }
  .#{$screenText}items-initial-items { order: initial; }
  .#{$screenText}items-reverse { flex-direction: row-reverse; }
}

@mixin screen-max($screen) {
  @media (max-width: config('grid', 'screens', $screen)) {
    @content;
  }
}

@mixin screen-min($screen) {
  @media (min-width: config('grid', 'screens', $screen)) {
    @content;
  }
}

@mixin screen-min-max($min-screen, $max-screen) {
  $max-width: config('grid', 'screens', $max-screen);
  $min-width: if(config('grid', 'screens', $min-screen) == $max-width, 0, config('grid', 'screens', $min-screen));
  @media (min-width: $min-width) and (max-width: $max-width) {
    @content;
  }
}

@mixin all-screen-min() {
  $_screens: config('grid', 'screens');

  @content(null, null);

  @each $screenName, $screenWidth in $_screens {
    @if $screenName == nth(nth($_screens, 1), 1) {
      @content($screenName, $screenWidth);
    } @else {
      @include screen-min($screenName) {
        @content($screenName, $screenWidth);
      }
    }
  }
}

@mixin all-screen-max() {
  $_screens: config('grid', 'screens');

  @content(null, null);

  @each $screenName, $screenWidth in $_screens {
    @if $screenName == nth(nth($_screens, 1), 1) {
      @content($screenName, $screenWidth);
    } @else {
      @include screen-max($screenName) {
        @content($screenName, $screenWidth);
      }
    }
  }
}
