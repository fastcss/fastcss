@use '../functions' as *;

@mixin make-utilities($screen: null) {
  $screenPrefix: if($screen, $screen+'\\:', '');

  @include display($screenPrefix);
  @include position($screenPrefix);
  @include overflow($screenPrefix);
  @include float($screenPrefix);
  @include vertical-align($screenPrefix);
  @include group($screenPrefix);
  @include list-style-type($screenPrefix);
  @include text-utilities($screenPrefix);
  @include cursor($screenPrefix);
}

// Generate the clearfix class
@mixin clearfix() {
  &:before,
  &:after {
    content: ' '; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// Generate display
//
// @param  {string} $prefix
@mixin display($prefix: null) {
  .#{$prefix}show,
  .#{$prefix}block {
    display: block;
  }
  .#{$prefix}hide,
  .#{$prefix}hidden {
    display: none;
  }
  .#{$prefix}inline {
    display: inline;
  }
  .#{$prefix}inline-block {
    display: inline-block;
  }
  .#{$prefix}table {
    display: table;
  }
  .#{$prefix}table-row {
    display: table-row;
  }
  .#{$prefix}table-cell {
    display: table-cell;
  }
  .#{$prefix}flex {
    display: flex;
  }
  .#{$prefix}inline-flex {
    display: inline-flex;
  }
  .#{$prefix}visible {
    visibility: visible;
  }
  .#{$prefix}invisible {
    visibility: hidden;
  }
}

// Generate positions
//
// @param  {string} $prefix
@mixin position($prefix: null) {
  .#{$prefix}relative {
    position: relative;
  }
  .#{$prefix}absolute {
    position: absolute;
  }
  .#{$prefix}fixed {
    position: fixed;
  }
  .#{$prefix}static {
    position: static;
  }
  .#{$prefix}sticky {
    position: sticky;
  }
}

// Generate overflows
//
// @param  {string} $prefix
@mixin overflow($prefix: null) {
  .#{$prefix}of-hidden {
    overflow: hidden;
  }
  .#{$prefix}of-visible {
    overflow: visible;
  }
  .#{$prefix}of-auto {
    overflow: auto;
  }
  .#{$prefix}of-auto-y {
    overflow-y: auto;
  }
  .#{$prefix}of-auto-x {
    overflow-x: auto;
  }
  .#{$prefix}of-scroll {
    overflow: scroll;
  }
  .#{$prefix}of-scroll-y {
    overflow-y: scroll;
  }
  .#{$prefix}of-scroll-x {
    overflow-x: scroll;
  }
}

// Generate floats
//
// @param  {string} $prefix
@mixin float($prefix: null) {
  .#{$prefix}float-left {
    float: left;
  }
  .#{$prefix}float-right {
    float: right;
  }
  .#{$prefix}float-none {
    float: none;
  }
  .#{$prefix}clear-left {
    clear: left;
  }
  .#{$prefix}clear-right {
    clear: right;
  }
  .#{$prefix}clear-both {
    clear: both;
  }
  .#{$prefix}clear-none {
    clear: none;
  }
  .#{$prefix}clearfix {
    @include clearfix;
  }
}

// Generate vertical aligns
//
// @param  {string} $prefix
@mixin vertical-align($prefix: null) {
  // ex: .va-middle
  @each $value in conf('utilities.vertical-align') {
    .#{$prefix}va-#{$value} {
      vertical-align: #{$value};
    }
  }
}

// Generate group
//
// @param  {string} $prefix
@mixin group($prefix: null) {
  .#{$prefix}group {
    display: flex;
    flex-direction: row;
    > .group-item {
      flex-shrink: 0;
      &.group-item-shrink {
        flex-shrink: 1;
      }
    }
    // group utilities
    &.#{$prefix}group-shrink > .group-item {
      flex-shrink: 1;
    }
    &.#{$prefix}group-vertical {
      flex-direction: column;
    }
    &.#{$prefix}group-center {
      justify-content: center;
    }
    &.#{$prefix}group-left {
      justify-content: flex-start;
    }
    &.#{$prefix}group-right {
      justify-content: flex-end;
    }
  }
}

// Generate list-style-type
//
// @param  {string} $screen
@mixin list-style-type($prefix: null) {
  // ex: .list-none
  @each $value in conf('utilities.list-style-type') {
    .#{$prefix}list-#{$value} {
      list-style-type: #{$value};
    }
  }

  // ex: .list-outside
  @each $value in (
    'outside',
    'inside',
  ) {
    .#{$prefix}list-#{$value} {
      list-style-position: #{$value};
    }
  }
}

// Generate text utilities
//
// @param  {string} $prefix
@mixin text-utilities($prefix: null) {
  // alignment
  .#{$prefix}text-left {
    text-align: left;
  }
  .#{$prefix}text-right {
    text-align: right;
  }
  .#{$prefix}text-center {
    text-align: center;
  }

  // transforms
  .#{$prefix}text-lowercase {
    text-transform: lowercase;
  }
  .#{$prefix}text-uppercase {
    text-transform: uppercase;
  }
  .#{$prefix}text-capitalize {
    text-transform: capitalize;
  }

  // decorations
  .#{$prefix}text-strike {
    text-decoration: line-through;
  }
  .#{$prefix}text-underline {
    text-decoration: underline;
  }
  .#{$prefix}no-decoration,
  .#{$prefix}text-no-decoration {
    text-decoration: none;
  }

  // white-space
  .#{$prefix}text-wrap {
    white-space: wrap;
  }
  .#{$prefix}text-nowrap {
    white-space: nowrap;
  }
}

// Generate cursors
//
// @param  {string} $prefix
@mixin cursor($prefix: null) {
  // ex: .list-none
  @each $cursor in conf('utilities.cursor') {
    .#{$prefix}cursor-#{$cursor} {
      cursor: #{$cursor};
    }
  }
}
